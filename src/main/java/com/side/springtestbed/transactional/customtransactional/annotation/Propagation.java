package com.side.springtestbed.transactional.customtransactional.annotation;

/**
 * 트랜잭션 전파 정책 정의
 * - 트랜잭션이 시작되거나 참여하는 방식을 결정
 */
public enum Propagation {
    
    /**
     * 기존 트랜잭션이 있으면 참여, 없으면 새로 생성
     * - 가장 일반적으로 사용되는 전파 정책
     * - 같은 트랜잭션 컨텍스트를 공유
     */
    REQUIRED,
    
    /**
     * 항상 새로운 트랜잭션을 생성
     * - 기존 트랜잭션을 일시 중단하고 새 트랜잭션 시작
     * - 완전히 독립적인 트랜잭션 동작
     */
    REQUIRES_NEW,
    
    /**
     * 기존 트랜잭션 내에서 중첩 트랜잭션 생성
     * - Savepoint를 이용하여 부분 롤백 가능
     * - 외부 트랜잭션에 영향을 주지 않는 내부 트랜잭션
     */
    NESTED,
    
    /**
     * 기존 트랜잭션이 있으면 참여, 없으면 트랜잭션 없이 실행
     * - 트랜잭션이 선택적으로 필요한 경우 사용
     */
    SUPPORTS,
    
    /**
     * 항상 트랜잭션 없이 실행
     * - 기존 트랜잭션이 있으면 일시 중단
     */
    NOT_SUPPORTED,
    
    /**
     * 기존 트랜잭션이 있으면 예외 발생
     * - 트랜잭션이 없는 상태에서만 실행 가능
     */
    NEVER,
    
    /**
     * 기존 트랜잭션이 반드시 있어야 함
     * - 트랜잭션이 없으면 예외 발생
     */
    MANDATORY
}
